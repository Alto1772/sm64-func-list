- crash_screen.c: [debug.c]
  crash_screen_draw_rect                             = [s] QuarterRectangle
  crash_screen_draw_glyph                            = [s] PrintCharacter
  [s] write_to_buf                                   = [s] prout
  crash_screen_print                                 = [s] PrintString
  crash_screen_sleep                                 = [s] WaitTime
  crash_screen_print_float_reg                       = [s] PrintFPURegs
  crash_screen_print_fpcsr                           = [s] PrintFPUFlags
  draw_crash_screen                                  = [s] PrintDebugInfo
  get_crashed_thread                                 = [s] FindFaultedThread
  thread2_crash_screen                               = [s] DebugProcess
  crash_screen_set_framebuffer                       = DbSetFrameBuffer
  crash_screen_init                                  = DbStartDebugger

- main.c: [system.c]
  handle_debug_key_sequences                         = SysChangeDebugMode
  unknown_main_func                                  = DummyFunc
  stub_main_1                                        = [s] InitStackMemory
  stub_main_2                                        = [s] CheckStackMemory
  stub_main_3                                        = [s] CheckRdpHangup
  setup_mesg_queues                                  = [s] InitMesgQueue
  alloc_pool                                         = [s] InitSystem
  create_thread                                      = [s] SysCreateThread
  handle_nmi_request                                 = [s] ActiveSystemResetMode
  receive_new_tasks                                  = [s] GetTaskMessage
  start_sptask                                       = [s] StartRSPTask
  interrupt_gfx_sptask                               = [s] YieldRSPTask
  start_gfx_sptask                                   = [s] StartGfxTask
  pretend_audio_sptask_done                          = [s] IgnoreAudTask
  handle_vblank                                      = [s] DoVRetrace
  handle_sp_complete                                 = [s] DoneRSPTask
  handle_dp_complete                                 = [s] DoneRDPTask
  thread3_main                                       = [s] MainProcess
  set_vblank_handler                                 = ScSetClient
  send_sp_task_message                               = ScSetRSPTask
  dispatch_audio_sptask                              = ScStartAudioTask
  exec_display_list                                  = ScStartGraphicTask
  turn_on_audio                                      = ScEnableAudioTask
  turn_off_audio                                     = ScDisableAudioTask
  thread1_idle                                       = [s] IdleProcess
  main_func                                          = BootProcess

- game_init.c: [gfxmain.c]
  init_rdp                                           = [s] InitRDP
  init_rsp                                           = [s] InitRSP
  init_z_buffer                                      = [s] InitDepthBuffer
  select_frame_buffer                                = [s] InitFrameBuffer
  clear_frame_buffer                                 = SoftwareBlanking
  clear_viewport                                     = SoftwareTrimBlanking
  draw_screen_borders                                = [s] ClearClipRectangle
  make_viewport_clip_rect                            = SetTrimmingRectangle
  create_gfx_task_structure                          = [s] SetTaskList
  init_rcp                                           = BeginDrawing
  end_master_display_list                            = EndDrawing
  draw_reset_bars                                    = [s] DoResetWiping
  render_init                                        = [s] InitGameFrame
  select_gfx_pool                                    = [s] BeginGameFrame
  display_and_vsync                                  = [s] FlushDisplayList
  [s] record_demo                                    = [s] PrintController
  adjust_analog_stick                                = [s] SetStickLevel
  run_demo_inputs                                    = [s] AutomaticMode
  read_controller_inputs                             = [s] ScanController
  init_controllers                                   = [s] InitController
  setup_game_memory                                  = [s] InitGraphics
  thread5_game_loop                                  = GraphProcess

- sound_init.c: [audmain.c]
  reset_volume                                       = AudResetMute
  lower_background_noise                             = AudStartMute
  raise_background_noise                             = AudEndMute
  disable_background_sound                           = AudLockSound
  enable_background_sound                            = AudUnlockSound
  set_sound_mode                                     = AudSetSoundMode
  play_menu_sounds                                   = AudFaceSound
  play_painting_eject_sound                          = AudPictWaveSound
  play_infinite_stairs_music                         = AudUnlimitedMusic
  set_background_music                               = AudPlayMusic
  fadeout_music                                      = AudStopMusic
  fadeout_level_music                                = AudStopMusicOnly
  play_cutscene_music                                = AudPlayStageMusic
  play_shell_music                                   = AudPlaySkateMusic
  stop_shell_music                                   = AudStopSkateMusic
  play_cap_music                                     = AudPlaySpecialMusic
  fadeout_cap_music                                  = AudFadeSpecialMusic
  stop_cap_music                                     = AudStopSpecialMusic
  play_menu_sounds_extra                             = AudSetLevelSound
  audio_game_loop_tick                               = AudStartSoundEffect
  thread4_sound                                      = AudioProcess

# mtrmain.o has printf functions for starting
# the rumble pak module. Nothing more is added.
#
# - in thread6_rumble_loop (MotorProcess):
#   osSyncPrintf("start motor thread\n");
#   ...
#   osSyncPrintf("go motor thread\n");

- rumble_init.c: [mtrmain.c]
  init_rumble_pak_scheduler_queue                    = InitSiSemaphore
  block_until_rumble_pak_free                        = GetSiPermission
  release_rumble_pak_control                         = RelSiPermission
  [s] start_rumble                                   = [s] DoMotorON
  [s] stop_rumble                                    = [s] DoMotorOFF
  [s] update_rumble_pak                              = [s] ControlMotor
  [s] update_rumble_data_queue                       = [s] GetMotorEvent
  queue_rumble_data                                  = SendMotorEvent
  func_sh_8024C89C                                   = SendMotorDecay
  is_rumble_finished_and_queue_empty                 = CheckMotorNoEvent
  reset_rumble_timers                                = SendMotorSlip
  reset_rumble_timers_2                              = SendMotorVib
  func_sh_8024CA04                                   = SendMotorSwim
  [s] thread6_rumble_loop                            = [s] MotorProcess
  cancel_rumble                                      = ResetMotorPack
  create_thread_6                                    = CreateMotorProcess
  rumble_thread_update_vi                            = SendMotorMessage

- level_update.c: [game.c]
  level_control_timer                                = GmStopWatch
  pressed_pause                                      = [s] CheckPauseRequest
  set_play_mode                                      = [s] ChangeProcess
  warp_special                                       = [s] ChangeExitMode
  fade_into_special_warp                             = PL_ExitGameMode
  stub_level_update_1                                = [s] CheckReset
  load_level_init_text                               = PL_DisplayMessage
  init_door_warp                                     = [s] MoveToFrontDoor
  set_mario_initial_cap_powerup                      = [s] ChangeSpecialCap
  set_mario_initial_action                           = [s] ChangeStatus
  init_mario_after_warp                              = [s] ChangePort
  warp_area                                          = [s] ChangeScene
  warp_level                                         = [s] ChangeStage
  warp_credits                                       = [s] ChangeEndingStage
  check_instant_warp                                 = [s] CheckSceneConnection
  music_changed_through_warp                         = [s] CheckSameMusic
  initiate_warp                                      = [s] SetPlayerEntrant
  get_painting_warp_node                             = [s] GetBGPortPointer
  initiate_painting_warp                             = [s] CheckBGPort
  level_trigger_warp                                 = PL_StartFadeout
  initiate_delayed_warp                              = [s] CheckGameFadeout
  update_hud_values                                  = [s] SetPlayerMeter
  basic_update                                       = [s] ExecuteGame
  play_mode_normal                                   = [s] NormalProcess
  play_mode_paused                                   = [s] PauseProcess
  play_mode_frame_advance                            = [s] StillProcess
  level_set_transition                               = FreezeGame
  play_mode_change_area                              = [s] FreezeProcess
  play_mode_change_level                             = [s] ExitProcess
  [s] play_mode_unused                               = [s] FreezePlayerProcess
  update_level                                       = [s] PlayGame
  init_level                                         = [s] InitGame
  lvl_init_or_update                                 = GameProcess
  lvl_init_from_save_file                            = GameInitialize
  lvl_set_current_level                              = CheckCourseMenu
  lvl_play_the_end_screen_sound                      = GameTheEnd

- interaction.c: [collision.c]
  get_mario_cap_flag                                 = [s] CheckCapType
  object_facing_mario                                = [s] PL_IsEnemyAttack
  mario_obj_angle_to_object                          = PL_GetPlayerAttackAngle
  determine_interaction                              = [s] IsPlayerAttack
  attack_object                                      = [s] SetEnemyAttackMail
  mario_stop_riding_object                           = PL_GetOffSkateBoard
  mario_grab_used_object                             = PL_TakeObject
  mario_drop_held_object                             = PL_DropObject
  mario_throw_held_object                            = PL_ThrowObject
  mario_stop_riding_and_holding                      = PL_DropAllObject
  does_mario_have_normal_cap_on_head                 = PL_IsPlayerWearingRedHat
  mario_blow_off_cap                                 = PL_BlowHat
  mario_lose_cap_to_enemy                            = PL_StealMariosHat
  mario_retrieve_cap                                 = PL_ReturnMariosHat
  able_to_grab_object                                = [s] IsPlayerTaking
  mario_get_collided_object                          = PL_GetCollidedObject
  mario_check_object_grab                            = PL_CheckTakingEnemy
  bully_knock_back_mario                             = [s] PlayerRepel
  bounce_off_object                                  = [s] PlayerTrample
  hit_object_from_below                              = [s] PlayerHeadAttack
  [s] unused_determine_knockback_action              = [s] PlayerSafeDown
  determine_knockback_action                         = [s] PlayerDown
  push_mario_out_of_object                           = [s] PlayerNormalReaction
  bounce_back_from_attack                            = [s] PlayerPunchKickReaction
  should_push_or_pull_door                           = [s] GetDoorDirection
  take_damage_from_interact_object                   = [s] SetPlayerDamage
  take_damage_and_knock_back                         = [s] PlayerDamageCommon
  reset_mario_pitch                                  = [s] ResetWaterCamera
  interact_coin                                      = [s] PlayerTakeCoin
  interact_water_ring                                = [s] PlayerRecoverPower
  interact_star_or_key                               = [s] PlayerGameClear
  interact_bbh_entrance                              = [s] PlayerEnterBasket
  interact_warp                                      = [s] PlayerEnterChimney
  interact_warp_door                                 = [s] PlayerEnterTDoor
  get_door_save_file_flag                            = PL_GetStarDoorFlag
  interact_door                                      = [s] PlayerEnterNDoor
  interact_cannon_base                               = [s] PlayerEnterCannon
  interact_igloo_barrier                             = [s] PlayerEnterKamakura
  interact_tornado                                   = [s] PlayerEnterTornedo
  interact_whirlpool                                 = [s] PlayerEnterDrain
  interact_strong_wind                               = [s] PlayerEnterWind
  interact_flame                                     = [s] PlayerHitFire
  interact_snufit_bullet                             = [s] PlayerHitTama
  interact_clam_or_bubba                             = [s] PlayerHitShell
  interact_bully                                     = [s] PlayerHitMotos
  interact_shock                                     = [s] PlayerHitBiriBiri
  [s] interact_stub                                  = [s] PlayerHitHanacyan
  interact_mr_blizzard                               = [s] PlayerHitWanWan
  interact_hit_from_below                            = [s] PlayerHitHeyho
  interact_bounce_top                                = [s] PlayerHitKuribo
  interact_unknown_08                                = [s] PlayerHitTogezo
  interact_damage                                    = [s] PlayerHitAllDamage
  interact_breakable                                 = [s] PlayerHitBlock
  interact_koopa_shell                               = [s] PlayerHitSkateBoard
  check_object_grab_mario                            = [s] PlayerHitTaken
  interact_pole                                      = [s] PlayerHangPole
  interact_hoot                                      = [s] PlayerHangBird
  interact_cap                                       = [s] PlayerTakeHat
  interact_grabbable                                 = [s] PlayerTakeObject
  mario_can_talk                                     = [s] CanReadBillboard
  check_read_sign                                    = [s] PlayerHitKanban
  check_npc_talk                                     = [s] PlayerHitMessenger
  interact_text                                      = [s] PlayerHitFriend
  check_kick_or_punch_wall                           = [s] CheckPunckKickWall
  mario_process_interactions                         = PL_CollisionCheck
  check_death_barrier                                = [s] GameOverGround
  check_lava_boost                                   = [s] BigDamageGround
  pss_begin_slide                                    = [s] StartTimer
  pss_end_slide                                      = [s] StopTimer
  mario_handle_special_floors                        = PL_CheckGroundCondition

- mario.c: [player.c]
  is_anim_at_end                                     = PL_IsLast1AnimeFrame
  is_anim_past_end                                   = PL_IsLast2AnimeFrame
  set_mario_animation                                = PL_SetAnimation
  set_mario_anim_with_accel                          = PL_SetVariableAnime
  set_anim_to_frame                                  = PL_SetAnimeFrame
  is_anim_past_frame                                 = PL_CheckAnimeFrame
  find_mario_anim_flags_and_translation              = PL_GetWaistTranslation
  update_mario_pos_for_anim                          = PL_PresetWaistAnime
  return_mario_anim_y_translation                    = PL_GetWaistAnimeY
  play_sound_if_no_flag                              = PL_StartSoundEffect
  play_mario_jump_sound                              = PL_StartJumpVoice
  adjust_sound_for_speed                             = PL_SetSpeedVolum
  play_sound_and_spawn_particles                     = PL_SpecialEffect
  play_mario_action_sound                            = PL_TrigSpecialEffect
  play_mario_landing_sound                           = PL_StartLandingEffect
  play_mario_landing_sound_once                      = PL_TrigStartLandingEffect
  play_mario_heavy_landing_sound                     = PL_StartDowningEffect
  play_mario_heavy_landing_sound_once                = PL_TrigStartDowningEffect
  play_mario_sound                                   = PL_StartJumpingEffect
  mario_set_forward_vel                              = PL_SetPlayerVelocity
  mario_get_floor_class                              = PL_GetSlipCode
  mario_get_terrain_sound_addend                     = PL_CheckGroundSurface
  resolve_and_return_wall_collisions                 = PL_CheckWallPlane
  vec3f_find_ceil                                    = PL_CheckRoofPlane
  mario_facing_downhill                              = PL_IsFrontSlip
  mario_floor_is_slippery                            = PL_IsSlipStart
  mario_floor_is_slope                               = PL_IsSlipLimit
  mario_floor_is_steep                               = PL_IsJumpMiss
  find_floor_height_relative_polar                   = PL_CheckPlayerAround
  find_floor_slope                                   = PL_GroundGradient
  update_mario_sound_and_camera                      = PL_ResetSpecialCameraMode
  set_steep_jump_action                              = [s] SetMissJumping
  [s] set_mario_y_vel_based_on_fspeed                = [s] SetPlayerJumpSpeed
  [s] set_mario_action_airborne                      = [s] SetStatusToJumping
  [s] set_mario_action_moving                        = [s] SetStatusToRunning
  [s] set_mario_action_submerged                     = [s] SetStatusToSwimming
  [s] set_mario_action_cutscene                      = [s] SetStatusToAutoDemo
  set_mario_action                                   = PL_ChangePlayerStatus
  set_jump_from_landing                              = PL_ChangePlayerTriJump
  set_jumping_action                                 = PL_ChangePlayerJumping
  drop_and_set_mario_action                          = PL_ChangePlayerDropping
  hurt_and_set_mario_action                          = PL_ChangePlayerDamage
  check_common_action_exits                          = PL_CheckAllMotions
  check_common_hold_action_exits                     = PL_CheckAllHoldMotions
  transition_submerged_to_walking                    = PL_ChangeFieldMode
  set_water_plunge_action                            = PL_ChangeWaterMode
  squish_mario_model                                 = [s] CompressPlayer
  debug_print_speed_action_normal                    = [s] DebugInformation
  update_mario_button_inputs                         = [s] CheckContollerButton
  update_mario_joystick_inputs                       = [s] CheckContollerStick
  update_mario_geometry_inputs                       = [s] CheckCurrentPlane
  update_mario_inputs                                = [s] CheckPlayerAction
  set_submerged_cam_preset_and_spawn_bubbles         = [s] ChangeWaterCamera
  update_mario_health                                = [s] UpdatePlayerPower
  update_mario_info_for_cam                          = [s] UpdatePlayerInfo
  mario_reset_bodystate                              = [s] InitShapeControl
  sink_mario_in_quicksand                            = [s] SinkInSand
  update_and_return_cap_flags                        = [s] CheckSpecialMode
  mario_update_hitbox_and_cap_model                  = [s] CtrlPlayerStyle
  [s] debug_update_mario_cap                         = [s] HatDebug
  func_sh_8025574C                                   = [s] MotorControl
  execute_mario_action                               = PlayerControl
  init_mario                                         = InitPlayer
  init_mario_from_save_file                          = InitPlayerWorks

- mario_step.c: [physics.c]
  get_additive_y_vel_for_jumps                       = PL_GetTrampolinePower
  stub_mario_step_1                                  = PL_CheckTrampolineJump
  stub_mario_step_2                                  = DoTrampoline
  transfer_bully_speed                               = PL_CollideBalls
  init_bully_collision_data                          = PL_SetBallRecord
  mario_bonk_reflection                              = PL_PlayerRefrection
  mario_update_quicksand                             = PL_CheckPlayerSinking
  mario_push_off_steep_floor                         = PL_FallFromHeavySlope
  mario_update_moving_sand                           = PL_QuicksandProcess
  mario_update_windy_ground                          = PL_GustProcess
  stop_and_set_height_to_floor                       = PL_StopProcess
  stationary_ground_step                             = PL_WaitProcess
  [s] perform_ground_quarter_step                    = [s] CheckGroundAtWalking
  perform_ground_step                                = PL_WalkProcess
  check_ledge_grab                                   = [s] HangonCheck
  perform_air_quarter_step                           = [s] CheckGroundAtJumping
  apply_twirl_gravity                                = [s] SpinFallProcess
  should_strengthen_gravity_for_jump_ascent          = [s] IsFallCancel
  apply_gravity                                      = [s] FallProcess
  apply_vertical_wind                                = [s] RiseProcess
  perform_air_step                                   = PL_JumpProcess
  set_vel_from_pitch_and_yaw                         = PL_Set3DSpeed
  set_vel_from_yaw                                   = PL_Set2DSpeed

- mario_actions_cutscene.c: [autodemo.c]
  get_credits_str_width                              = [s] StringWidth
  print_displaying_credits_entry                     = DrawStaffRoll
  bhv_end_peach_loop                                 = DoPeachProcess
  bhv_end_toad_loop                                  = DoKinopioProcess
  geo_switch_peach_eyes                              = CtrlPeachFace
  [s] stub_is_textbox_active                         = [s] WaitMessageEnd
  get_star_collection_dialog                         = [s] CheckStarMessage
  handle_save_menu                                   = [s] DoDataBackup
  spawn_obj_at_mario_rel_yaw                         = [s] MakeObject
  cutscene_take_cap_off                              = [s] TakeOffHat
  cutscene_put_cap_on                                = [s] PutOnHat
  mario_ready_to_speak                               = CheckPlayerDialog
  set_mario_npc_dialog                               = CtrlPlayerDialog
  act_reading_npc_dialog                             = [s] PlayerDialogMode
  act_waiting_for_dialog                             = [s] PlayerWaitDialog
  act_disappeared                                    = [s] PlayerFreezing
  act_reading_automatic_dialog                       = [s] PlayerDoDialog
  act_reading_sign                                   = [s] PlayerReadBillboard
  act_debug_free_move                                = [s] PlayerFreeMoving
  general_star_dance_handler                         = [s] WinDemoCommon
  act_star_dance                                     = [s] PlayerWinDemo
  act_star_dance_water                               = [s] PlayerWinSwim
  act_fall_after_star_grab                           = [s] PlayerWinLanding
  common_death_handler                               = [s] DowningCommon
  act_standing_death                                 = [s] PlayerGiddyDowning
  act_electrocution                                  = [s] PlayerElecDowning
  act_suffocation                                    = [s] PlayerGasDowning
  act_death_on_back                                  = [s] PlayerBackDownEnd
  act_death_on_stomach                               = [s] PlayerForeDownEnd
  act_quicksand_death                                = [s] PlayerSandDowning
  act_eaten_by_bubba                                 = [s] PlayerIsEaten
  launch_mario_until_land                            = [s] JumpingDemoCommon
  act_unlocking_key_door                             = [s] PlayerOpenKeyDoor
  act_unlocking_star_door                            = [s] PlayerOpenStarDoor
  act_entering_star_door                             = [s] PlayerOpenAutoDoor
  act_going_through_door                             = [s] PlayerOpenDoor
  act_warp_door_spawn                                = [s] PlayerTripDoor
  act_emerge_from_pipe                               = [s] PlayerJumpChimney
  act_spawn_spin_airborne                            = [s] PlayerRollJumping
  act_spawn_spin_landing                             = [s] PlayerRollJumpEnd
  act_exit_airborne                                  = [s] PlayerEnterWinner
  act_falling_exit_airborne                          = [s] PlayerLandWinner
  act_exit_land_save_dialog                          = [s] PlayerEnterWinnerEnd
  act_death_exit                                     = [s] PlayerEnterLoser
  act_unused_death_exit                              = [s] PlayerLandLoser
  act_falling_death_exit                             = [s] PlayerDownLoser
  act_special_exit_airborne                          = [s] PlayerPushOut
  act_special_death_exit                             = [s] PlayerPushDown
  act_spawn_no_spin_airborne                         = [s] PlayerEnterLanding
  act_spawn_no_spin_landing                          = [s] PlayerEnterLandEnd
  act_bbh_enter_spin                                 = [s] PlayerInTripBasket
  act_bbh_enter_jump                                 = [s] PlayerJumpTripBasket
  act_teleport_fade_out                              = [s] PlayerWarpIn
  act_teleport_fade_in                               = [s] PlayerWarpOut
  act_shocked                                        = [s] PlayerElectricDamage
  act_squished                                       = [s] PlayerCompressVertial
  act_putting_on_cap                                 = [s] PlayerPutOnHat
  stuck_in_ground_handler                            = [s] FallDowningCommon
  act_head_stuck_in_ground                           = [s] PlayerHeadSlideDowning
  act_butt_stuck_in_ground                           = [s] PlayerHipAttackDowning
  act_feet_stuck_in_ground                           = [s] PlayerFootDowning
  [s] advance_cutscene_step                          = [s] ChangeDemoProcess
  [s] intro_cutscene_hide_hud_and_mario              = [s] Open_StartCameraDemo
  [s] intro_cutscene_peach_lakitu_scene              = [s] Open_EndCameraDemo
  [s] intro_cutscene_raise_pipe                      = [s] Open_DokanIsCamming
  [s] intro_cutscene_jump_out_of_pipe                = [s] Open_MarioIsJumping
  [s] intro_cutscene_land_outside_pipe               = [s] Open_MarioIsLanding
  [s] intro_cutscene_lower_pipe                      = [s] Open_DokanLeave
  [s] intro_cutscene_set_mario_to_idle               = [s] Open_MarioWaiting
  [s] act_intro_cutscene                             = [s] PlayerCameraDemo
  [s] jumbo_star_cutscene_falling                    = [s] End_MarioTookBigStar
  [s] jumbo_star_cutscene_taking_off                 = [s] End_MarioWinningJump
  [s] jumbo_star_cutscene_flying                     = [s] End_MarioWinningFlight
  [s] act_jumbo_star_cutscene                        = [s] PlayerBeginEnding
  generate_yellow_sparkles                           = [s] End_DisplayTwinkleStar
  [s] end_obj_set_visual_pos                         = [s] End_SetGroundHeight
  [s] end_peach_cutscene_mario_falling               = [s] End_MarioLanding
  [s] end_peach_cutscene_mario_landing               = [s] End_MarioLandEnd
  [s] end_peach_cutscene_summon_jumbo_star           = [s] End_MarioLookAround
  [s] end_peach_cutscene_spawn_peach                 = [s] End_StarFlash
  [s] end_peach_cutscene_descend_peach               = [s] End_PeachLanding
  [s] end_peach_cutscene_run_to_peach                = [s] End_MarioRunning
  [s] end_peach_cutscene_dialog_1                    = [s] End_MarioMeetsPeach
  [s] end_peach_cutscene_dialog_2                    = [s] End_PeachTalkToMario
  [s] end_peach_cutscene_kiss_from_peach             = [s] End_PeachKissToMario
  [s] end_peach_cutscene_star_dance                  = [s] End_MarioYaaha
  [s] end_peach_cutscene_dialog_3                    = [s] End_PeachExit
  [s] end_peach_cutscene_run_to_castle               = [s] End_MarioExit
  [s] end_peach_cutscene_fade_out                    = [s] End_StartStaffRoll
  [s] act_end_peach_cutscene                         = [s] PlayerEnterEnding
  [s] act_credits_cutscene                           = [s] PlayerStaffRoll
  [s] act_end_waving_cutscene                        = [s] PlayerFinGame
  [s] check_for_instant_quicksand                    = [s] CheckPlayerException
  mario_execute_cutscene_action                      = PL_PlayerDemoMain

- mario_actions_automatic.c: [special.c]
  add_tree_leaf_particles                            = [s] FallLeaf
  play_climbing_sounds                               = [s] BarSound
  set_pole_position                                  = [s] BarProcess
  act_holding_pole                                   = [s] PlayerBarWait
  act_climbing_pole                                  = [s] PlayerBarClimb
  act_grab_pole_slow                                 = [s] PlayerBarHang
  act_grab_pole_fast                                 = [s] PlayerBarJump
  act_top_of_pole_transition                         = [s] PlayerBarStandup
  act_top_of_pole                                    = [s] PlayerBarStandWait
  perform_hanging_step                               = [s] CheckRoof
  update_hang_moving                                 = [s] DoRoofMovingProcess
  update_hang_stationary                             = [s] DoRoofWaitingProcess
  act_start_hanging                                  = [s] PlayerHangRoof
  act_hanging                                        = [s] PlayerWaitRoof
  act_hang_moving                                    = [s] PlayerMoveRoof
  let_go_of_ledge                                    = [s] StartHangLanding
  climb_up_ledge                                     = [s] CorrectHangPosition
  update_ledge_climb_camera                          = [s] CorrectHangCamera
  update_ledge_climb                                 = [s] HangingCommon
  act_ledge_grab                                     = [s] PlayerHanging
  act_ledge_climb_slow                               = [s] PlayerAscend
  act_ledge_climb_down                               = [s] PlayerDescend
  act_ledge_climb_fast                               = [s] PlayerHangJumping
  act_grabbed                                        = [s] PlayerTaken
  act_in_cannon                                      = [s] PlayerInCannon
  act_tornado_twirling                               = [s] PlayerInTornedo
  check_common_automatic_cancels                     = [s] CheckPlayerException
  mario_execute_automatic_action                     = PL_PlayerSpecMain

- mario_actions_stationary.c: [waiting.c]
  check_common_idle_cancels                          = [s] WaitingCommonEvents
  check_common_hold_idle_cancels                     = [s] HoldingCommonEvents
  act_idle                                           = [s] PlayerWaiting
  play_anim_sound                                    = [s] SetSleepilySound
  act_start_sleeping                                 = [s] PlayerSleepily
  act_sleeping                                       = [s] PlayerSleeping
  act_waking_up                                      = [s] PlayerWakeup
  act_shivering                                      = [s] PlayerColdWaiting
  act_coughing                                       = [s] PlayerGasWaiting
  act_hold_idle                                      = [s] PlayerHolding
  act_hold_heavy_idle                                = [s] PlayerShouldering
  act_standing_against_wall                          = [s] PlayerWallWaiting
  act_in_quicksand                                   = [s] PlayerSandWaiting
  act_crouching                                      = [s] PlayerSquating
  act_panting                                        = [s] PlayerWaitTired
  act_hold_panting_unused                            = [s] PlayerHoldTired
  stopping_step                                      = [s] StopCommon
  act_braking_stop                                   = [s] PlayerBrakeEnd
  act_butt_slide_stop                                = [s] PlayerSlipEnd
  act_hold_butt_slide_stop                           = [s] PlayerHoldSlipEnd
  act_slide_kick_slide_stop                          = [s] PlayerSlidingKickEnd
  act_start_crouching                                = [s] PlayerSquatStart
  act_stop_crouching                                 = [s] PlayerSquatStandup
  act_start_crawling                                 = [s] PlayerSquatWalkStart
  act_stop_crawling                                  = [s] PlayerSquatWalkEnd
  act_shockwave_bounce                               = [s] PlayerQuaking
  landing_step                                       = [s] JumpEndCommon
  check_common_landing_cancels                       = [s] JumpEndEvents
  act_jump_land_stop                                 = [s] PlayerJumpEnd
  act_double_jump_land_stop                          = [s] PlayerSecJumpEnd
  act_side_flip_land_stop                            = [s] PlayerUTurnJumpEnd
  act_freefall_land_stop                             = [s] PlayerLandEnd
  act_triple_jump_land_stop                          = [s] PlayerUltraJumpEnd
  act_backflip_land_stop                             = [s] PlayerBackJumpEnd
  act_lava_boost_land                                = [s] PlayerFireJumpEnd
  act_long_jump_land_stop                            = [s] PlayerBroadJumpEnd
  act_hold_jump_land_stop                            = [s] PlayerHoldJumpEnd
  act_hold_freefall_land_stop                        = [s] PlayerHoldLandEnd
  act_air_throw_land                                 = [s] PlayerJumpThrowEnd
  act_twirl_land                                     = [s] PlayerSpinJumpEnd
  act_ground_pound_land                              = [s] PlayerHipAttackEnd
  act_first_person                                   = [s] PlayerViewing
  check_common_stationary_cancels                    = [s] CheckPlayerException
  mario_execute_stationary_action                    = PL_PlayerWaitMain

- mario_actions_moving.c: [running.c]
  tilt_body_running                                  = [s] PlayerGradient
  play_step_sound                                    = PL_PlayerRunningSound
  align_with_floor                                   = [s] PL_PostureControl
  begin_walking_action                               = [s] PL_ChangePlayerPower
  check_ledge_climb_down                             = [s] CheckDescent
  slide_bonk                                         = [s] PlayerClashStandard
  set_triple_jump_action                             = [s] PL_ChangePlayerTriple
  update_sliding_angle                               = [s] SlideProcess
  update_sliding                                     = [s] DoSliding
  apply_slope_accel                                  = [s] SlopeProcess
  apply_landing_accel                                = [s] DoSlipping
  update_shell_speed                                 = [s] DoSkating
  apply_slope_decel                                  = [s] DoBraking
  update_decelerating_speed                          = [s] DoStopping
  update_walking_speed                               = [s] DoRunning
  should_begin_sliding                               = [s] IsSlipStart
  analog_stick_held_back                             = [s] IsTurnning
  check_ground_dive_or_punch                         = [s] ChangePlayerCatching
  begin_braking_action                               = [s] ChangePlayerWaiting
  anim_and_audio_for_walk                            = [s] DoRunningAnimation
  anim_and_audio_for_hold_walk                       = [s] DoCarryingAnimation
  anim_and_audio_for_heavy_walk                      = [s] DoTransferAnimation
  push_or_sidle_wall                                 = [s] DoPushingAnimation
  tilt_body_walking                                  = [s] RunningForm
  tilt_body_ground_shell                             = [s] SkatingForm
  act_walking                                        = [s] PlayerRunning
  act_move_punching                                  = [s] PlayerRunningAttack
  act_hold_walking                                   = [s] PlayerCarrying
  act_hold_heavy_walking                             = [s] PlayerTransfer
  act_turning_around                                 = [s] PlayerTurning
  act_finish_turning_around                          = [s] PlayerTurnEnd
  act_braking                                        = [s] PlayerBraking
  act_decelerating                                   = [s] PlayerWalkEnd
  act_hold_decelerating                              = [s] PlayerCarryEnd
  act_riding_shell_ground                            = [s] PlayerSkating
  act_crawling                                       = [s] PlayerSquatWalking
  act_burning_ground                                 = [s] PlayerFireDashing
  tilt_body_butt_slide                               = [s] SlippingForm
  common_slide_action                                = [s] SlippingBasic
  common_slide_action_with_jump                      = [s] SlipForeCommon
  act_butt_slide                                     = [s] PlayerSlipFore
  act_hold_butt_slide                                = [s] PlayerHoldSlipFore
  act_crouch_slide                                   = [s] PlayerSquatSlipping
  act_slide_kick_slide                               = [s] PlayerSlidingKick
  stomach_slide_action                               = [s] SlipBackCommon
  act_stomach_slide                                  = [s] PlayerSlipBack
  act_hold_stomach_slide                             = [s] PlayerHoldSlipBack
  act_dive_slide                                     = [s] PlayerCatching
  common_ground_knockback_action                     = [s] DowningCommon
  act_hard_backward_ground_kb                        = [s] PlayerBackDown
  act_hard_forward_ground_kb                         = [s] PlayerForeDown
  act_backward_ground_kb                             = [s] PlayerShortBackDown
  act_forward_ground_kb                              = [s] PlayerShortForeDown
  act_soft_backward_ground_kb                        = [s] PlayerSafeBackDown
  act_soft_forward_ground_kb                         = [s] PlayerSafeForeDown
  act_ground_bonk                                    = [s] PlayerCatchDown
  act_death_exit_land                                = [s] PlayerLoserDown
  common_landing_action                              = [s] JumpSlipCommon
  common_landing_cancels                             = [s] JumpSlipEvents
  act_jump_land                                      = [s] PlayerJumpSlip
  act_freefall_land                                  = [s] PlayerLandSlip
  act_side_flip_land                                 = [s] PlayerUTurnJumpSlip
  act_hold_jump_land                                 = [s] PlayerHoldJumpSlip
  act_hold_freefall_land                             = [s] PlayerHoldLandSlip
  act_long_jump_land                                 = [s] PlayerBroadJumpSlip
  act_double_jump_land                               = [s] PlayerSecJumpSlip
  act_triple_jump_land                               = [s] PlayerUltraJumpSlip
  act_backflip_land                                  = [s] PlayerBackJumpSlip
  quicksand_jump_land_action                         = [s] PlayerSandJumpCommon
  act_quicksand_jump_land                            = [s] PlayerSandJumping
  act_hold_quicksand_jump_land                       = [s] PlayerSandHoldJumping
  check_common_moving_cancels                        = [s] CheckPlayerException
  mario_execute_moving_action                        = PL_PlayerMoveMain

- mario_actions_airborne.c: [jumping.c]
  play_flip_sounds                                   = [s] RollJumpSound
  play_far_fall_sound                                = [s] FallVoiceEffect
  play_knockback_sound                               = [s] ClashVoiceEffect
  lava_boost_on_wall                                 = [s] ChangePlayerFireDown
  check_fall_damage                                  = [s] LandingDamageCheck
  check_kick_or_dive_in_air                          = [s] CheckJumpingAttack
  should_get_stuck_in_ground                         = [s] CheckGroundCaving
  check_fall_damage_or_get_stuck                     = [s] StandardJampEnd
  check_horizontal_wind                              = [s] JumpGustRoutine
  update_air_with_turn                               = [s] DoSlipJumping
  update_air_without_turn                            = [s] DoJumping
  update_lava_boost_or_twirling                      = [s] DoSpinJumping
  update_flying_yaw                                  = [s] YawingControl
  update_flying_pitch                                = [s] PitchControl
  update_flying                                      = [s] DoFlight
  common_air_action_step                             = [s] JumpingBasic
  act_jump                                           = [s] PlayerJumping
  act_double_jump                                    = [s] PlayerSecJumping
  act_triple_jump                                    = [s] PlayerUltraJumping
  act_backflip                                       = [s] PlayerBackJumping
  act_freefall                                       = [s] PlayerLanding
  act_hold_jump                                      = [s] PlayerHoldJumping
  act_hold_freefall                                  = [s] PlayerHoldLanding
  act_side_flip                                      = [s] PlayerUTurnJumping
  act_wall_kick_air                                  = [s] PlayerJumpWall
  act_long_jump                                      = [s] PlayerBroadJumping
  act_riding_shell_air                               = [s] PlayerBoardJumping
  act_twirling                                       = [s] PlayerSpinJumping
  act_dive                                           = [s] PlayerJumpCatch
  act_air_throw                                      = [s] PlayerJumpingThrow
  act_water_jump                                     = [s] PlayerWaterJump
  act_hold_water_jump                                = [s] PlayerWaterHoldJump
  act_steep_jump                                     = [s] PlayerMissJumping
  act_ground_pound                                   = [s] PlayerHipAttacking
  act_burning_jump                                   = [s] PlayerFireJumping
  act_burning_fall                                   = [s] PlayerFireLanding
  act_crazy_box_bounce                               = [s] PlayerHopperJumping
  common_air_knockback_step                          = [s] JumpDownCommon
  check_wall_kick                                    = [s] CheckWallJumping
  act_backward_air_kb                                = [s] PlayerJumpShortBackDown
  act_forward_air_kb                                 = [s] PlayerJumpShortForeDown
  act_hard_backward_air_kb                           = [s] PlayerJumpBackDown
  act_hard_forward_air_kb                            = [s] PlayerJumpForeDown
  act_thrown_backward                                = [s] PlayerThrownBackDown
  act_thrown_forward                                 = [s] PlayerThrownForeDown
  act_soft_bonk                                      = [s] PlayerLandSafeDown
  act_getting_blown                                  = [s] PlayerWindDowning
  act_air_hit_wall                                   = [s] PlayerStayWall
  act_forward_rollout                                = [s] PlayerCatchStop
  act_backward_rollout                               = [s] PlayerBSlipStop
  act_butt_slide_air                                 = [s] PlayerSlipFalling
  act_hold_butt_slide_air                            = [s] PlayerHoldSlipFalling
  act_lava_boost                                     = [s] PlayerFireDowning
  act_slide_kick                                     = [s] PlayerJumpingKick
  act_jump_kick                                      = [s] PlayerJumpPowerKick
  act_shot_from_cannon                               = [s] PlayerCannonJumping
  act_flying                                         = [s] PlayerFlightGlider
  act_riding_hoot                                    = [s] PlayerFlyWithBird
  act_flying_triple_jump                             = [s] PlayerWingJumping
  act_top_of_pole_jump                               = [s] PlayerBarLanding
  act_vertical_wind                                  = [s] PlayerWindFlying
  act_special_triple_jump                            = [s] PlayerSpecialJumping
  check_common_airborne_cancels                      = [s] CheckPlayerException
  mario_execute_airborne_action                      = PL_PlayerJumpMain

- mario_actions_submerged.c: [swimming.c]
  [s] set_swimming_at_surface_particles              = [s] DoWaterRipple
  [s] swimming_near_surface                          = [s] IsFloatingDepth
  [s] get_buoyancy                                   = [s] GetFloatingForce
  [s] perform_water_full_step                        = [s] CheckGround
  [s] apply_water_current                            = [s] DoWaterCurrent
  [s] perform_water_step                             = [s] SwimProcess
  [s] update_water_pitch                             = [s] CorrectAnimeAngle
  [s] stationary_slow_down                           = [s] FloatPlayer
  [s] update_swimming_speed                          = [s] SwimPlayer
  [s] update_swimming_yaw                            = [s] YawingControl
  [s] update_swimming_pitch                          = [s] PitchControl
  [s] common_idle_step                               = [s] PlayerFloatingCommon
  [s] act_water_idle                                 = [s] PlayerSwimNormalWait
  [s] act_hold_water_idle                            = [s] PlayerSwimCarryWait
  [s] act_water_action_end                           = [s] PlayerSwimNormalStop
  [s] act_hold_water_action_end                      = [s] PlayerSwimCarryStop
  [s] reset_bob_variables                            = [s] StartPlayerWave
  [s] surface_swim_bob                               = [s] DoPlayerWave
  [s] common_swimming_step                           = [s] PlayerSwimmingCommon
  [s] play_swimming_noise                            = [s] DoButterflySound
  [s] check_water_jump                               = [s] CheckWaterJumping
  [s] act_breaststroke                               = [s] PlayerSwimming1
  [s] act_swimming_end                               = [s] PlayerSwimming2
  [s] act_flutter_kick                               = [s] PlayerSwimming3
  [s] act_hold_breaststroke                          = [s] PlayerCarrySwimming1
  [s] act_hold_swimming_end                          = [s] PlayerCarrySwimming2
  [s] act_hold_flutter_kick                          = [s] PlayerCarrySwimming3
  [s] act_water_shell_swimming                       = [s] PlayerKameSwimming
  [s] check_water_grab                               = [s] CheckCatching
  [s] act_water_throw                                = [s] PlayerSwimThrow
  [s] act_water_punch                                = [s] PlayerSwimTaking
  [s] common_water_knockback_step                    = [s] SwimDownCommon
  [s] act_backward_water_kb                          = [s] PlayerSwimBackDown
  [s] act_forward_water_kb                           = [s] PlayerSwimForeDown
  [s] act_water_shocked                              = [s] PlayerSwimElecDown
  [s] act_drowning                                   = [s] PlayerSwimDown
  [s] act_water_death                                = [s] PlayerSwimDownEnd
  [s] act_water_plunge                               = [s] PlayerDiving
  [s] act_caught_in_whirlpool                        = [s] PlayerInDrain
  [s] play_metal_water_jumping_sound                 = [s] StartJumpingEffect
  [s] play_metal_water_walking_sound                 = [s] StartWalkingEffect
  [s] update_metal_water_walking_speed               = [s] DoWaterWalking
  [s] update_metal_water_jump_speed                  = [s] DoWaterJumping
  [s] act_metal_water_standing                       = [s] PlayerWaterNormWaiting
  [s] act_hold_metal_water_standing                  = [s] PlayerWaterHoldWaiting
  [s] act_metal_water_walking                        = [s] PlayerWaterNormWalking
  [s] act_hold_metal_water_walking                   = [s] PlayerWaterHoldWalking
  [s] act_metal_water_jump                           = [s] PlayerWaterNormJumping
  [s] act_hold_metal_water_jump                      = [s] PlayerWaterHoldJumping
  [s] act_metal_water_falling                        = [s] PlayerWaterNormLanding
  [s] act_hold_metal_water_falling                   = [s] PlayerWaterHoldLanding
  [s] act_metal_water_jump_land                      = [s] PlayerWaterNormJumpEnd
  [s] act_hold_metal_water_jump_land                 = [s] PlayerWaterHoldJumpEnd
  [s] act_metal_water_fall_land                      = [s] PlayerWaterNormLandEnd
  [s] act_hold_metal_water_fall_land                 = [s] PlayerWaterHoldLandEnd
  [s] check_common_submerged_cancels                 = [s] CheckPlayerException
  mario_execute_submerged_action                     = PL_PlayerSwimMain

- mario_actions_object.c: [action.c]
  animated_stationary_ground_step                    = [s] StopCommon
  mario_update_punch_sequence                        = PL_AttackProcess
  act_punching                                       = [s] PlayerAttacking
  act_picking_up                                     = [s] PlayerTaking
  act_dive_picking_up                                = [s] PlayerCatchEnd
  act_placing_down                                   = [s] PlayerPutting
  act_throwing                                       = [s] PlayerPitching
  act_heavy_throw                                    = [s] PlayerThrowing
  act_stomach_slide_stop                             = [s] PlayerCatchLost
  act_picking_up_bowser                              = [s] PlayerStartBrandish
  act_holding_bowser                                 = [s] PlayerBrandishing
  act_releasing_bowser                               = [s] PlayerEndBrandish
  check_common_object_cancels                        = [s] CheckPlayerException
  mario_execute_object_action                        = PL_PlayerActnMain

- [callback.c]:
  - level_geo.c:
    geo_envfx_main                                     = WeatherProc
    geo_skybox_main                                    = DrawBackGround
  - mario_misc.c:
    geo_draw_mario_head_goddard                        = DoMarioFaceAnime
    [s] toad_message_faded                             = [s] WaitingGhostKinopio
    [s] toad_message_opaque                            = [s] WaitingRealKinopio
    [s] toad_message_talking                           = [s] TalkingDecorKinopio
    [s] toad_message_opacifying                        = [s] FadeinDecorKinopio
    [s] toad_message_fading                            = [s] FadeoutDecorKinopio
    bhv_toad_message_loop                              = ExecDecorKinopio
    bhv_toad_message_init                              = InitDecorKinopio
    [s] star_door_unlock_spawn_particles               = [s] SetStarDoorTwinkle
    bhv_unlock_door_star_init                          = InitStarDoorEffect
    bhv_unlock_door_star_loop                          = ExecStarDoorEffect
    [s] make_gfx_mario_alpha                           = [s] MakeAlphaSetGfx
    geo_mirror_mario_set_alpha                         = CtrlMarioAlpha
    geo_switch_mario_stand_run                         = CtrlMarioLOD
    geo_switch_mario_eyes                              = CtrlMarioEye
    geo_mario_tilt_torso                               = CtrlMarioWaist
    geo_mario_head_rotation                            = CtrlMarioHead
    geo_switch_mario_hand                              = CtrlMarioHand
    geo_mario_hand_foot_scaler                         = CtrlHandScale
    geo_switch_mario_cap_effect                        = CtrlMarioSkin
    geo_switch_mario_cap_on_off                        = CtrlMarioCap
    geo_mario_rotate_wing_cap_wings                    = CtrlMarioWing
    geo_switch_mario_hand_grab_pos                     = CtrlMarioTaking
    geo_render_mirror_mario                            = CtrlMirrorMario
    geo_mirror_mario_backface_culling                  = CtrlMarioGeoMode

# memory.o includes printf functions for decompressing
# data from ROM and also adds feature to use Depthbuf
# segment for initializing dynamic memory allocation:
#
# - load_segment_decompress (LoadCompressed):
#   osSyncPrintf("start decompress\n");
#   ...
#   osSyncPrintf("end decompress\n");
#
# - main_pool_init (InitFreeZone):
#   topAddr = _DepthbufSegmentEnd;

- memory.c: [memory.c]   # obvoiusly... :/
  set_segment_base_addr                              = SetSegment
  get_segment_base_addr                              = GetSegment
  segmented_to_virtual                               = SegmentToVirtual
  virtual_to_segmented                               = VirtualToSegment
  move_segment_table_to_dmem                         = StoreSegments
  main_pool_init                                     = InitFreeZone
  main_pool_alloc                                    = AllocFreeZone
  main_pool_free                                     = PurgeFreeZone
  main_pool_realloc                                  = ResizeFreeZone
  main_pool_available                                = FreeZoneSize
  main_pool_push_state                               = LinkFreeZone
  main_pool_pop_state                                = UnlinkFreeZone
  [s] dma_read                                       = [s] ReadBlock
  [s] dynamic_dma_read                               = LoadData
  load_segment                                       = LoadSegment
  load_to_fixed_pool_addr                            = LoadProgram
  load_segment_decompress                            = LoadCompressed
  load_segment_decompress_heap                       = LoadPressTexture
  load_engine_code_segment                           = LoadUserLibrary
  alloc_only_pool_init                               = InitArena
  alloc_only_pool_alloc                              = AllocArena
  alloc_only_pool_resize                             = ResizeArena
  mem_pool_init                                      = InitHeap
  mem_pool_alloc                                     = AllocHeap
  mem_pool_free                                      = FreeHeap
  alloc_display_list                                 = AllocDynamic
  [s] load_dma_table_address                         = LoadPartitionTable
  setup_dma_table_list                               = InitPartial
  load_patchable_table                               = ReadPartialData

- save_file.c: [backup.c]
  [s] stub_save_file_1                               = [s] SetBackupData
  [s] read_eeprom_data                               = [s] ReadEeprom
  [s] write_eeprom_data                              = [s] WriteEeprom
  [s] calc_checksum                                  = [s] CalcCheckSum
  [s] verify_save_block_signature                    = [s] IsCheckSumOk
  [s] add_save_block_signature                       = [s] SetupBackUpData
  [s] restore_main_menu_data                         = [s] RecoverHiScore
  [s] save_main_menu_data                            = [s] WriteHiScore
  [s] wipe_main_menu_data                            = [s] ClearHiScore
  [s] get_coin_score_age                             = [s] GetHiScoreOrder
  [s] set_coin_score_age                             = [s] SetHiScoreOrder
  [s] touch_coin_score_age                           = [s] UpdateHiScoreOrder
  [s] touch_high_score_ages                          = [s] UpDateAllHiScoreOrder
  [s] restore_save_file_data                         = [s] RecoverStorage
  save_file_do_save                                  = BuWriteStorage
  save_file_erase                                    = BuClearStorage
  save_file_copy                                     = BuCopyStorage
  save_file_load_all                                 = BuInitBackUp
  save_file_reload                                   = BuRestoreBackUp
  save_file_collect_star_or_key                      = BuStoreBackUp
  save_file_exists                                   = BuIsActive
  save_file_get_max_coin_score                       = BuGetWinScore
  save_file_get_course_star_count                    = BuGetNumStars
  save_file_get_total_star_count                     = BuGetSumStars
  save_file_set_flags                                = BuSetItemFlag
  save_file_clear_flags                              = BuClrItemFlag
  save_file_get_flags                                = BuGetItemFlag
  save_file_get_star_flags                           = BuGetStarFlag
  save_file_set_star_flags                           = BuSetStarFlag
  save_file_get_course_coin_score                    = BuGetNumCoins
  save_file_is_cannon_unlocked                       = BuGetCannonFlag
  save_file_set_cannon_unlocked                      = BuSetCannonFlag
  save_file_set_cap_pos                              = BuSetHatPosition
  save_file_get_cap_pos                              = BuGetHatPosition
  save_file_set_sound_mode                           = BuSetSoundMode
  save_file_get_sound_mode                           = BuGetSoundMode
  save_file_move_cap_to_default_location             = BuRestoreHat
  disable_warp_checkpoint                            = BuClearRamStorage
  check_if_should_set_warp_checkpoint                = BuSetMidPoint
  check_warp_checkpoint                              = BuGetMidPoint

- area.c: [scene.c]
  override_viewport_and_clip                         = SnSetViewPort
  set_warp_transition_rgb                            = [s] SnSetBlankColor
  print_intro_text                                   = SnDisplayDemoMessage
  get_mario_spawn_type                               = SnGetPortType
  area_get_warp_node                                 = SnGetPortPtr
  area_get_warp_node_from_params                     = SnFindPortPtr
  load_obj_warp_nodes                                = [s] InitPorts
  clear_areas                                        = SnInitSceneInfo
  clear_area_graph_nodes                             = SnDisposeScene
  load_area                                          = SnOpenScene
  unload_area                                        = SnCloseScene
  load_mario_area                                    = SnEnterPlayer
  unload_mario_area                                  = SnExitPlayer
  change_area                                        = SnChangeScene
  area_update_objects                                = SnExecuteStrategy
  play_transition                                    = SnStartFader
  play_transition_after_delay                        = SnDelayFader
  render_game                                        = SnDrawScreen

- rendering_graph_node.c: [hmsdraw.c]
  [s] geo_process_master_list_sub                    = [s] MakeDisplayList
  [s] geo_append_display_list                        = [s] RegisterGfxList
  [s] geo_process_master_list                        = [s] DoLayerNode
  [s] geo_process_ortho_projection                   = [s] DoOrthoNode
  [s] geo_process_perspective                        = [s] DoPerspNode
  [s] geo_process_level_of_detail                    = [s] DoLODNode
  [s] geo_process_switch                             = [s] DoSelectNode
  [s] geo_process_camera                             = [s] DoCameraNode
  [s] geo_process_translation_rotation               = [s] DoCoordNode
  [s] geo_process_translation                        = [s] DoTransNode
  [s] geo_process_rotation                           = [s] DoRotateNode
  [s] geo_process_scale                              = [s] DoScaleNode
  [s] geo_process_billboard                          = [s] DoBboardNode
  [s] geo_process_display_list                       = [s] DoGfxNode
  [s] geo_process_generated_list                     = [s] DoCProgNode
  [s] geo_process_background                         = [s] DoClearNode
  [s] geo_process_animated_part                      = [s] DoJointNode
  geo_set_animation_globals                          = [s] BeginSkeletonAnime
  [s] geo_process_shadow                             = [s] DoShadowNode
  [s] obj_is_in_view                                 = [s] IsDisplayShape
  [s] geo_process_object                             = [s] DoShapeNode
  [s] geo_process_object_parent                      = [s] DoBranchNode
  geo_process_held_object                            = [s] DoSuckerNode
  geo_try_process_children                           = [s] ThroughNode
  geo_process_node_and_siblings                      = [s] DrawNode
  geo_process_root                                   = DrawScene

- profiler.c: [time.c]
  profiler_log_thread5_time                          = SetGraphCPUTime
  profiler_log_thread4_time                          = SetAudioCPUTime
  profiler_log_gfx_time                              = SetGraphRCPTime
  profiler_log_vblank_time                           = SetAudioRCPTime
  draw_profiler_bar                                  = [s] DisplayTimeBar
  draw_reference_profiler_bars                       = [s] DisplayTimeScale
  draw_profiler_mode_1                               = [s] DisplayProcTimming
  draw_profiler_mode_0                               = [s] DisplayProcInterval
  draw_profiler                                      = DisplayProcTime

- decompress.s: [slidec.s]
  slidec                                             = decompress